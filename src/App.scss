@import "./variables.scss";

.app {
  // display: flex;
}

main,
p {
  // font-family: $body-font;

}

.body {
  max-width: 960px;
  margin: 0 auto;

  @media (max-width: $mq-max-width) {
    max-width: 90vw;
  }
}

h1,
h2,
h3,
p {
  font-family: $display-font;
  font-weight: 400;
}

h2,
h3,
p {
  color: $primary;
}

h1 {
  color: $white;
  margin: 0;
  font-size: 2em;

  @media (max-width: $mq-max-width) {
    font-size: 1.3em;
  }
}

h2 {
  text-align: center;
}

*:focus {
  outline: max(2px, 0.15em) solid $secondary;
  outline-offset: max(2px, 0.15em);
}

body {
  // background-color: $white;
  background-image: url('./assets/images/so-white.png');
  background-size: 300px;
  
}

.title-container {
  display: flex;
  align-items: center;

  .logo {
    height: 3em;
    width: 3em;
    background-image: url('./assets/images/logo.png');
    background-size: contain;
    background-repeat: no-repeat;
    margin-right: 1em;
  }
}

.no-results,
#content {
  color: $black;
  margin: 0;
  text-align: center;
  width: 100%;
  height: 100%;
}

.title {
  display: flex;
  flex-direction: column;

  p {
    color: $white;
    margin: 0;

    @media (max-width: $mq-max-width) {
      display: none;
    }
  }

}

.no-results {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.no-results-logo {
  height: 150px;
}

.circle-radio {
  margin: 0em .25em;
  color: $black;

  input[type="radio"] {
    appearance: none;
    background-color: #fff;
    margin: 0;
    margin-right: .2em;
    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    border: 0.1em solid $secondary;
    border-radius: 50%;
    transform: translateY(-0.075em);
    display: grid;
    place-content: center;
  }

  input[type="radio"]::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    border-radius: 50%;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em $secondary;
  }

  input[type="radio"]:checked::before {
    transform: scale(1);
  }
}

header {
  background-color: $primary;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1em;

  .header-inner {
    display: flex;
  }

  button {
    margin: .5em;
    padding: .5em 1em;
    background-color: transparent;
    color: $white;
    border: none;
    border-radius: 4px;

    &:disabled {
      color: $gray;
    }

    &:hover:not(:disabled) {
      text-decoration: underline;
      cursor: pointer;
    }
  }
}

.modal-grid {
  display: flex;
}

.rating-container {
  width: 100%;
  display: flex;
  flex-direction: column;
}

.edit-modal-actions,
.submit-modal-actions,
.nested-modal-actions {
  display: flex;
  justify-content: flex-end;
}

.submit-button-container {
  position: fixed;
  padding: 1em;
  bottom: 2em;
  right: 2em;

  .submit-button {
    height: 4em;
    width: 4em;
    color: white;
    background-color: rgba($secondary, 1);
    border-radius: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    transition: all .5s;
    cursor: pointer;

    &:hover {
      background-color: mix($secondary, black, 85%);
    }
  }
}

.error-message {
  color: red;
  margin: 5px 0 0 0;
}

.button {
  background-color: $secondary;
  color: $white !important;
  border: none;
  padding: .8em 1.2em;
  text-transform: uppercase;
  border-radius: 4px;
  cursor: pointer;

  &:hover {
    background-color: mix($secondary, $black, 85%);
  }
}

.color-picker {
  padding: 1em 0;
  border-radius: 4px;

  .circle-picker {
    margin-top: 1em;
  }
}

.search-rank-container {
  width: 100%;
  display: flex;
  padding: 1em 0;
  align-items: center;
  width: 100%;
  justify-content: flex-end;

  @media (max-width: $mq-max-width) {
    flex-flow: column;
    align-items: center;
    justify-content: center;
  }

  .search-container {
    position: relative;
    font-family: $body-font;

    #search {
      background-color: mix($white, #b6a4ae, 70%);
      padding: 1em 2.4em;
      border: none;
      border-radius: 4px;
      width: 300px;
      margin-right: 1em;
      @media (max-width: $mq-max-width) {
      margin-right: 0em;
      padding: 1em 2.8em;
      }
    }

    .search-icon {
      position: absolute;
      left: 10px;
      top: 50%;
      transform: translateY(-50%);
      width: 20px;
      height: 20px;
    }
  }

  .rank-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin: 1em;

    @media (max-width: $mq-max-width) {
      margin: .5em;
    }

    .star-radios {
      display: flex;
      justify-content: center;
    }

    .circle-radios {
      display: flex;
    }
  }
}

input[type="text"] {
  width: 40vw;
  border: none !important;
  background-color: white;

  &::placeholder {
    color: $gray;
  }

  @media (max-width: $mq-max-width) {
    width: 80vw;
  }
}

.search-icon {
  position: absolute;
  right: 10px;
}

.circle-radio {
  display: flex;
  align-items: center;

  input[type="radio"] {
    width: 1em;
    height: 1em;

    @media (max-width: $mq-max-width) {
      width: 1em;
      height: 1em;
    }
  }
}

.star-radio {
  display: none;
}

.star-label {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  margin: .1em;
  background-image: url('./assets/images/emptyStar3D.webp');
  background-size: contain;
  background-repeat: no-repeat;
  cursor: pointer;
}

.star-label.selected,
.hovered {
  background-image: url('./assets/images/fullStar.webp');
}

.selected {
  &.unhovered {
    opacity: .7;
  }
}

.loading-container {display: flex;
align-items: center;
flex-direction: column;}

.lds-hourglass {
  margin: 0 auto;
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.lds-hourglass:after {
  content: " ";
  display: block;
  border-radius: 50%;
  width: 0;
  height: 0;
  margin: 8px;
  box-sizing: border-box;
  border: 32px solid $secondary;
  border-color: $secondary transparent $secondary transparent;
  animation: lds-hourglass 1.2s infinite;
}

@keyframes lds-hourglass {
  0% {
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  50% {
    transform: rotate(900deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  100% {
    transform: rotate(1800deg);
  }
}